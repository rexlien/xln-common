
versions += [

        scalaCollectionCompat: "2.1.5",
        scalafmt             : "1.5.1",
        scalaJava8Compat     : "0.9.0",
        scalatest            : "3.0.8",
        scoverage            : "1.4.0",
        scoveragePlugin      : "2.5.0",
        baseScala: "2.12",
        scala: "2.12.10",
        scalaLogging: "3.9.2",

]



libs += [

        scalaCollectionCompat: "org.scala-lang.modules:scala-collection-compat_$versions.baseScala:$versions.scalaCollectionCompat",
        scalaJava8Compat: "org.scala-lang.modules:scala-java8-compat_$versions.baseScala:$versions.scalaJava8Compat",
        scalaLibrary: "org.scala-lang:scala-library:$versions.scala",
        scalaLogging: "com.typesafe.scala-logging:scala-logging_$versions.baseScala:$versions.scalaLogging",
        scalaReflect: "org.scala-lang:scala-reflect:$versions.scala",
        scalatest: "org.scalatest:scalatest_$versions.baseScala:$versions.scalatest",
        scoveragePlugin: "org.scoverage:scalac-scoverage-plugin_$versions.baseScala:$versions.scoverage",
        scoverageRuntime: "org.scoverage:scalac-scoverage-runtime_$versions.baseScala:$versions.scoverage",
//        mongoSet: ["org.mongodb:mongodb-driver-reactivestreams:1.11.0", "org.springframework.data:spring-data-mongodb:2.2.0.RELEASE", "org.mongodb:mongodb-driver-async:3.11.1"],
        mongoSet: ["org.mongodb:mongodb-driver-reactivestreams:4.0.3", "org.springframework.data:spring-data-mongodb:3.0.0.RELEASE", "org.mongodb:mongodb-driver-legacy:4.0.3"],

        sqlSet: ['com.github.rexlien:jasync-mysql:1.0.14.RL1', "com.github.rexlien:jasync-r2dbc-mysql:1.0.14.RL1", 'org.springframework.data:spring-data-r2dbc:1.1.0.RELEASE', 'org.springframework.data:spring-data-relational:2.0.0.RELEASE'],
        protobufSet: ["io.grpc:grpc-netty-shaded:$versions.grpc", "io.grpc:grpc-protobuf:$versions.grpc" ,"io.grpc:grpc-stub:$versions.grpc" ,
                      "com.google.protobuf:protobuf-java-util:$versions.protobuf", "io.grpc:grpc-kotlin-stub:0.1.4", "io.grpc:grpc-services:$versions.grpc", "com.fasterxml.jackson.dataformat:jackson-dataformat-protobuf:2.10.+"],

        sparkSet: [  //new xln.gradle.Dependency(module: "org.apache.spark:spark-mllib_2.11:2.4.4",  exclude : "slf4j-log4j12"),
                     new xln.gradle.Dependency(module: 'org.apache.spark:spark-sql_2.12:3.0.0-SNAPSHOT',  exclude : "slf4j-log4j12"),
                     //new xln.gradle.Dependency(module: 'org.apache.spark:spark-graphx_2.11:2.4.4',  exclude : "slf4j-log4j12"),
                     //new xln.gradle.Dependency(module: 'org.apache.spark:spark-launcher_2.11:2.4.4',  exclude : "slf4j-log4j12"),
                     //new xln.gradle.Dependency(module: 'org.apache.spark:spark-catalyst_2.11:2.4.4',  exclude : "slf4j-log4j12"),
                     //new xln.gradle.Dependency(module: 'org.apache.spark:spark-streaming_2.11:2.4.4', exclude : "slf4j-log4j12"),
                     new xln.gradle.Dependency(module: 'org.apache.spark:spark-core_2.12:3.0.0-SNAPSHOT', exclude : "slf4j-log4j12"),
                     new xln.gradle.Dependency(module: 'org.apache.spark:spark-kubernetes_2.12:3.0.0-SNAPSHOT', exclude : "slf4j-log4j12")

        ],

        kafkaSet: [
                "org.apache.kafka:kafka-clients:2.6.2", "io.projectreactor.kafka:reactor-kafka:1.3.3",
                "org.springframework.kafka:spring-kafka:2.6.8"
        ],

]






dependencies {

    implementation group: 'io.projectreactor', name: 'reactor-core', version: '3.4.5'

    implementation "org.springframework.boot:spring-boot-gradle-plugin:$boot_version"

    implementation "org.springframework.boot:spring-boot:$boot_version"

    implementation group: 'org.springframework.data', name: 'spring-data-redis', version: "$boot_version"
    //compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: "$boot_version"
    implementation "org.springframework:spring-aspects:$spring_version"
    //compile 'org.springframework.data:spring-data-r2dbc:1.0.0.RC1'
    //compile 'io.r2dbc:r2dbc-pool:0.8.0.M8'
    //compile 'com.github.jasync-sql:jasync-mysql:1.0.11'
    //compile "com.github.jasync-sql:jasync-r2dbc-mysql:1.0.11"
    //compile("org.springframework.boot:spring-boot-starter-data-jpa:${boot_version}")
    //implementation("io.r2dbc:r2dbc-h2")

    //compile group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version: "$boot_version"
    implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '2.7.0'


    implementation group: 'io.projectreactor.addons', name: 'reactor-extra', version: '3.4.3'
    //compile group: 'org.springframework.data', name: 'spring-data-mongodb', version: "$boot_version"
    //compile 'org.mongodb:mongodb-driver-reactivestreams:1.11.0'
    implementation group: 'org.springframework.boot', name: 'spring-boot-actuator', version: "$boot_version"

    //compile group: 'io.projectreactor.ipc', name: 'reactor-netty', version: '0.7.9.RELEASE'

    implementation 'com.google.protobuf:protobuf-gradle-plugin:0.8.10'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    implementation group: 'com.google.guava', name: 'guava', version: '23.0'

    implementation "io.lettuce:lettuce-core:6.0.4.RELEASE"
    implementation group: 'io.netty', name: 'netty-all', version: '4.1.65.Final'
    implementation group: 'org.quartz-scheduler', name: 'quartz', version: '2.2.1'
    implementation group: 'org.quartz-scheduler', name: 'quartz-jobs', version: '2.2.1'
    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.26'
    implementation 'org.redisson:redisson:3.11.5'

    implementation("org.slf4j:slf4j-api:1.7.25")
    //compile group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.25'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.13'
    //compile("org.springframework.boot:spring-boot-starter-actuator:$boot_version")
    implementation("org.springframework.boot:spring-boot-actuator-autoconfigure:$boot_version")
    //testCompile 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: "$boot_version"

    testCompileOnly 'org.projectlombok:lombok:1.18.10'
    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.10'
    compileOnly "org.springframework.boot:spring-boot-configuration-processor:$boot_version"
    implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.5.4'

    compileOnly 'com.google.auto.value:auto-value-annotations:1.9'
    annotationProcessor 'com.google.auto.value:auto-value:1.9'

    implementation group: 'org.rocksdb', name: 'rocksdbjni', version: '6.1.2'
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-reactor")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    //implementation group: 'com.fasterxml.jackson.module', name: 'jackson- module-kotlin', version: '2.10.0'
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.11.4"
    implementation 'com.fasterxml.jackson.module:jackson-module-scala_2.12:2.11.4'
    implementation 'io.github.microutils:kotlin-logging:1.12.0'

    compileOnly 'org.codehaus.groovy:groovy-all:2.5.4'
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '6.4'
    providedCompile group: 'org.springframework.boot', name: 'spring-boot-loader', version: "$boot_version"

    testImplementation "org.testcontainers:testcontainers:1.15.3"


    implementation libs.scalaCollectionCompat
    implementation libs.scalaJava8Compat
    implementation libs.scalaLibrary
    implementation libs.scalaReflect
    implementation libs.scalaLogging

    //project.xlnImplement(libs.scalaLogging)
    project.xlnImplement(libs.mongoSet)
    project.xlnImplement(libs.sqlSet)
    project.xlnImplement(libs.protobufSet)
    project.xlnImplement(libs.kafkaSet)




}
